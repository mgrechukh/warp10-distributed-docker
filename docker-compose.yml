version: '3'
services:

  ingress:
    restart: always
    image: warp-poke/warp10-distributed-docker:1.3.13
    container_name: ingress
    links:
      - kafka
      - zookeeper
    ports:
      - "8080:8080"
      - "7090:7090"
    expose:
      - 8080
    environment:
      - WARPENV_WARP_COMPONENTS=ingress
    command: ["/wait-for-it.sh", "create-table:5000","-t","60", "--", "/opt/warp10/bin/warp10.start.sh"]

  directory:
    restart: always
    image: warp-poke/warp10-distributed-docker:1.3.13
    container_name: directory
    expose:
      - 8883
      - 9090
    ports:
      - "7091:7090"
    links:
      - zookeeper
      - create-table
      - kafka
      - hbase
      # - ingress
      # - egress
    environment:
      - WARPENV_WARP_COMPONENTS=directory
    command: ["/wait-for-it.sh", "create-table:5000","-t","30", "--", "/opt/warp10/bin/warp10.start.sh"]

  store:
    restart: always
    image: warp-poke/warp10-distributed-docker:1.3.13
    container_name: store
    links:
      - zookeeper
      - kafka
      - hbase
      - create-table
    ports:
      - "7092:7090"
    environment:
      - WARPENV_WARP_COMPONENTS=store
    command: ["/wait-for-it.sh", "create-table:5000","-t","30", "--", "/opt/warp10/bin/warp10.start.sh"]

  egress:
    restart: always
    image: warp-poke/warp10-distributed-docker:1.3.13
    container_name: egress
    links:
      - zookeeper
      - hbase
      - create-table
      - directory
    environment:
      - WARPENV_WARP_COMPONENTS=egress
    ports:
      - "8081:8081"
      - "7093:7090"
    expose:
      - "8081"
    command: ["/wait-for-it.sh", "create-table:5000","-t","30", "--", "/opt/warp10/bin/warp10.start.sh"]

  runner:
    restart: always
    image: warp-poke/warp10-distributed-docker:1.3.13
    container_name: runner
    links:
      - zookeeper
      - hbase
      - create-table
      - directory
    environment:
      - WARPENV_WARP_COMPONENTS=runner
    ports:
      - "7094:7090"
    command: ["/wait-for-it.sh", "create-table:5000","-t","30", "--", "/opt/warp10/bin/warp10.start.sh"]

  # sozu:
  #   restart: always
  #   image: warp-poke/warp10-sozu
  #   container_name: sozu
  #   # links:
  #     # - ingress
  #     # - egress
  #   command: ["/sozu","start", "-c", "/etc/sozu/sozu.toml"]


  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    logging:
      driver: "none"
    ports:
      - "2181"
    expose:
      - "2181"

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:0.8.2.1
    logging:
      driver: "none"
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper
      KAFKA_CREATE_TOPICS: "data,metadata"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # hbase stuff
  hbase:
    links:
      - zookeeper
    container_name: hbase
    image: pierrezemb/hbase-standalone:1.3.1
    logging:
      driver: "none"
    ports:
      - "16010:16010"
    expose:
      - "8080"
      - "9090"
      - "16000"
      - "16010"
      - "16020"
      - "16030"
    command: ["/wait-for-it.sh", "zookeeper:2181", "-t", "10", "--", "/usr/bin/supervisord"]

  create-table:
    logging:
      driver: "none"
    image: pierrezemb/hbase-standalone:1.3.1
    container_name: create-table
    links:
      - hbase
    command: >
      bash -c "/wait-for-it.sh hbase:16010 -t 30 -- wget 'https://raw.githubusercontent.com/cityzendata/warp10-platform/1125177549ac8d7773a9b170bf5af7a5a204260d/etc/continuum.hbase' -O /continuum.hbase
      && sed -i -e 's/0.0.0.0/hbase/g' /opt/hbase/conf/hbase-site.xml
      && sed -i -e 's/LZ4/NONE/g' /continuum.hbase
      && /opt/hbase/bin/hbase shell /continuum.hbase
      && timeout 5 python -m SimpleHTTPServer 5000
      && echo 'done'"
